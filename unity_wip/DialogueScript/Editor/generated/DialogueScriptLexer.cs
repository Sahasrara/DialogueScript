//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./grammar/DialogueScriptLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class DialogueScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TYPE_BOOLEAN=1, TYPE_CHAR=2, TYPE_FLOAT_DEFAULT=3, TYPE_FLOAT32=4, TYPE_FLOAT64=5, 
		TYPE_INT_DEFAULT=6, TYPE_INT8=7, TYPE_INT16=8, TYPE_INT32=9, TYPE_INT64=10, 
		TYPE_UINT_DEFAULT=11, TYPE_UINT8=12, TYPE_UINT16=13, TYPE_UINT32=14, TYPE_UINT64=15, 
		TYPE_STRING=16, BREAK=17, CASE=18, DEFAULT=19, IF=20, ELSE=21, SWITCH=22, 
		INTEGER_LITERAL=23, FLOATING_POINT_LITERAL=24, BOOLEAN_LITERAL=25, CHARACTER_LITERAL=26, 
		STRING_LITERAL=27, NULL_LITERAL=28, LPAREN=29, RPAREN=30, LBRACE=31, RBRACE=32, 
		LBRACK=33, RBRACK=34, SEMI=35, COMMA=36, DOT=37, COLON=38, COLONCOLON=39, 
		ASSIGN=40, ADD_ASSIGN=41, SUB_ASSIGN=42, MUL_ASSIGN=43, DIV_ASSIGN=44, 
		AND_ASSIGN=45, OR_ASSIGN=46, XOR_ASSIGN=47, MOD_ASSIGN=48, LSHIFT_ASSIGN=49, 
		RSHIFT_ASSIGN=50, GT=51, LT=52, EQUAL=53, LE=54, GE=55, NOTEQUAL=56, NOT=57, 
		BIT_NOT=58, BIT_AND=59, BIT_OR=60, BIT_XOR=61, AND=62, OR=63, INC=64, 
		DEC=65, ADD=66, SUB=67, MUL=68, DIV=69, MOD=70, CONCAT=71, TERNARY=72, 
		IDENTIFIER=73, WHITESPACE=74, COMMENT_BLOCK=75, COMMENT_LINE=76;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TYPE_BOOLEAN", "TYPE_CHAR", "TYPE_FLOAT_DEFAULT", "TYPE_FLOAT32", "TYPE_FLOAT64", 
		"TYPE_INT_DEFAULT", "TYPE_INT8", "TYPE_INT16", "TYPE_INT32", "TYPE_INT64", 
		"TYPE_UINT_DEFAULT", "TYPE_UINT8", "TYPE_UINT16", "TYPE_UINT32", "TYPE_UINT64", 
		"TYPE_STRING", "BREAK", "CASE", "DEFAULT", "IF", "ELSE", "SWITCH", "INTEGER_LITERAL", 
		"DecIntegerLiteral", "HexIntegerLiteral", "OctalIntegerLiteral", "BinaryIntegerLiteral", 
		"FLOATING_POINT_LITERAL", "DecFloatingPointLiteral", "BOOLEAN_LITERAL", 
		"CHARACTER_LITERAL", "SingleCharacter", "EscapeSequence", "STRING_LITERAL", 
		"StringCharacters", "StringCharacter", "NULL_LITERAL", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "COLON", 
		"COLONCOLON", "ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", 
		"AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", "LSHIFT_ASSIGN", 
		"RSHIFT_ASSIGN", "GT", "LT", "EQUAL", "LE", "GE", "NOTEQUAL", "NOT", "BIT_NOT", 
		"BIT_AND", "BIT_OR", "BIT_XOR", "AND", "OR", "INC", "DEC", "ADD", "SUB", 
		"MUL", "DIV", "MOD", "CONCAT", "TERNARY", "IDENTIFIER", "LetterOrDigit", 
		"Digits", "Digit", "NonZeroDigit", "HexDigit", "BinaryDigit", "Letter", 
		"FloatTypeSuffix", "WHITESPACE", "COMMENT_BLOCK", "COMMENT_LINE"
	};


	public DialogueScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DialogueScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'bool'", "'char'", "'float'", "'float32'", "'float64'", "'int'", 
		"'int8'", "'int16'", "'int32'", "'int64'", "'uint'", "'uint8'", "'uint16'", 
		"'uint32'", "'uint64'", "'string'", "'break'", "'case'", "'default'", 
		"'if'", "'else'", "'switch'", null, null, null, null, null, "'null'", 
		"'('", "')'", "'{'", "'}'", "'['", "']'", "';'", "','", "'.'", "':'", 
		"'::'", "'='", "'+='", "'-='", "'*='", "'/='", "'&='", "'|='", "'^='", 
		"'%='", "'<<='", "'>>='", "'>'", "'<'", "'=='", "'<='", "'>='", "'!='", 
		"'!'", "'~'", "'&'", "'|'", "'^'", "'&&'", "'||'", "'++'", "'--'", "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'..'", "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TYPE_BOOLEAN", "TYPE_CHAR", "TYPE_FLOAT_DEFAULT", "TYPE_FLOAT32", 
		"TYPE_FLOAT64", "TYPE_INT_DEFAULT", "TYPE_INT8", "TYPE_INT16", "TYPE_INT32", 
		"TYPE_INT64", "TYPE_UINT_DEFAULT", "TYPE_UINT8", "TYPE_UINT16", "TYPE_UINT32", 
		"TYPE_UINT64", "TYPE_STRING", "BREAK", "CASE", "DEFAULT", "IF", "ELSE", 
		"SWITCH", "INTEGER_LITERAL", "FLOATING_POINT_LITERAL", "BOOLEAN_LITERAL", 
		"CHARACTER_LITERAL", "STRING_LITERAL", "NULL_LITERAL", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "COLON", 
		"COLONCOLON", "ASSIGN", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", 
		"AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", "LSHIFT_ASSIGN", 
		"RSHIFT_ASSIGN", "GT", "LT", "EQUAL", "LE", "GE", "NOTEQUAL", "NOT", "BIT_NOT", 
		"BIT_AND", "BIT_OR", "BIT_XOR", "AND", "OR", "INC", "DEC", "ADD", "SUB", 
		"MUL", "DIV", "MOD", "CONCAT", "TERNARY", "IDENTIFIER", "WHITESPACE", 
		"COMMENT_BLOCK", "COMMENT_LINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DialogueScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static DialogueScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,76,611,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
		1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
		4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,
		1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,
		1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
		1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
		1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
		1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,
		1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,
		1,22,3,22,324,8,22,1,23,1,23,1,23,5,23,329,8,23,10,23,12,23,332,9,23,3,
		23,334,8,23,1,24,1,24,1,24,4,24,339,8,24,11,24,12,24,340,1,25,1,25,4,25,
		345,8,25,11,25,12,25,346,1,26,1,26,1,26,4,26,352,8,26,11,26,12,26,353,
		1,27,1,27,1,28,3,28,359,8,28,1,28,1,28,1,28,1,28,3,28,365,8,28,1,28,1,
		28,3,28,369,8,28,3,28,371,8,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
		1,29,3,29,382,8,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,392,8,
		30,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
		32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,418,8,32,1,33,
		1,33,3,33,422,8,33,1,33,1,33,1,34,4,34,427,8,34,11,34,12,34,428,1,35,1,
		35,3,35,433,8,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,
		1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,
		1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,
		1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,
		1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,61,
		1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,1,65,1,65,1,66,
		1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,71,1,72,
		1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,
		1,78,1,79,1,79,1,79,1,80,1,80,1,81,1,81,5,81,552,8,81,10,81,12,81,555,
		9,81,1,82,1,82,3,82,559,8,82,1,83,4,83,562,8,83,11,83,12,83,563,1,84,1,
		84,3,84,568,8,84,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,
		4,90,581,8,90,11,90,12,90,582,1,90,1,90,1,91,1,91,1,91,1,91,5,91,591,8,
		91,10,91,12,91,594,9,91,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,5,
		92,605,8,92,10,92,12,92,608,9,92,1,92,1,92,1,592,0,93,1,1,3,2,5,3,7,4,
		9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
		35,18,37,19,39,20,41,21,43,22,45,23,47,0,49,0,51,0,53,0,55,24,57,0,59,
		25,61,26,63,0,65,0,67,27,69,0,71,0,73,28,75,29,77,30,79,31,81,32,83,33,
		85,34,87,35,89,36,91,37,93,38,95,39,97,40,99,41,101,42,103,43,105,44,107,
		45,109,46,111,47,113,48,115,49,117,50,119,51,121,52,123,53,125,54,127,
		55,129,56,131,57,133,58,135,59,137,60,139,61,141,62,143,63,145,64,147,
		65,149,66,151,67,153,68,155,69,157,70,159,71,161,72,163,73,165,0,167,0,
		169,0,171,0,173,0,175,0,177,0,179,0,181,74,183,75,185,76,1,0,11,2,0,88,
		88,120,120,2,0,66,66,98,98,4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,13,
		34,34,92,92,1,0,49,57,3,0,48,57,65,70,97,102,1,0,48,49,3,0,65,90,95,95,
		97,122,4,0,68,68,70,70,100,100,102,102,3,0,9,10,12,13,32,32,2,0,10,10,
		13,13,627,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
		0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
		1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
		0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,55,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,67,1,0,0,
		0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
		1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
		0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
		105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,
		115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,
		125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,
		135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,
		145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
		155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,
		181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,1,187,1,0,0,0,3,192,1,0,0,0,5,
		197,1,0,0,0,7,203,1,0,0,0,9,211,1,0,0,0,11,219,1,0,0,0,13,223,1,0,0,0,
		15,228,1,0,0,0,17,234,1,0,0,0,19,240,1,0,0,0,21,246,1,0,0,0,23,251,1,0,
		0,0,25,257,1,0,0,0,27,264,1,0,0,0,29,271,1,0,0,0,31,278,1,0,0,0,33,285,
		1,0,0,0,35,291,1,0,0,0,37,296,1,0,0,0,39,304,1,0,0,0,41,307,1,0,0,0,43,
		312,1,0,0,0,45,323,1,0,0,0,47,333,1,0,0,0,49,335,1,0,0,0,51,342,1,0,0,
		0,53,348,1,0,0,0,55,355,1,0,0,0,57,370,1,0,0,0,59,381,1,0,0,0,61,391,1,
		0,0,0,63,393,1,0,0,0,65,417,1,0,0,0,67,419,1,0,0,0,69,426,1,0,0,0,71,432,
		1,0,0,0,73,434,1,0,0,0,75,439,1,0,0,0,77,441,1,0,0,0,79,443,1,0,0,0,81,
		445,1,0,0,0,83,447,1,0,0,0,85,449,1,0,0,0,87,451,1,0,0,0,89,453,1,0,0,
		0,91,455,1,0,0,0,93,457,1,0,0,0,95,459,1,0,0,0,97,462,1,0,0,0,99,464,1,
		0,0,0,101,467,1,0,0,0,103,470,1,0,0,0,105,473,1,0,0,0,107,476,1,0,0,0,
		109,479,1,0,0,0,111,482,1,0,0,0,113,485,1,0,0,0,115,488,1,0,0,0,117,492,
		1,0,0,0,119,496,1,0,0,0,121,498,1,0,0,0,123,500,1,0,0,0,125,503,1,0,0,
		0,127,506,1,0,0,0,129,509,1,0,0,0,131,512,1,0,0,0,133,514,1,0,0,0,135,
		516,1,0,0,0,137,518,1,0,0,0,139,520,1,0,0,0,141,522,1,0,0,0,143,525,1,
		0,0,0,145,528,1,0,0,0,147,531,1,0,0,0,149,534,1,0,0,0,151,536,1,0,0,0,
		153,538,1,0,0,0,155,540,1,0,0,0,157,542,1,0,0,0,159,544,1,0,0,0,161,547,
		1,0,0,0,163,549,1,0,0,0,165,558,1,0,0,0,167,561,1,0,0,0,169,567,1,0,0,
		0,171,569,1,0,0,0,173,571,1,0,0,0,175,573,1,0,0,0,177,575,1,0,0,0,179,
		577,1,0,0,0,181,580,1,0,0,0,183,586,1,0,0,0,185,600,1,0,0,0,187,188,5,
		98,0,0,188,189,5,111,0,0,189,190,5,111,0,0,190,191,5,108,0,0,191,2,1,0,
		0,0,192,193,5,99,0,0,193,194,5,104,0,0,194,195,5,97,0,0,195,196,5,114,
		0,0,196,4,1,0,0,0,197,198,5,102,0,0,198,199,5,108,0,0,199,200,5,111,0,
		0,200,201,5,97,0,0,201,202,5,116,0,0,202,6,1,0,0,0,203,204,5,102,0,0,204,
		205,5,108,0,0,205,206,5,111,0,0,206,207,5,97,0,0,207,208,5,116,0,0,208,
		209,5,51,0,0,209,210,5,50,0,0,210,8,1,0,0,0,211,212,5,102,0,0,212,213,
		5,108,0,0,213,214,5,111,0,0,214,215,5,97,0,0,215,216,5,116,0,0,216,217,
		5,54,0,0,217,218,5,52,0,0,218,10,1,0,0,0,219,220,5,105,0,0,220,221,5,110,
		0,0,221,222,5,116,0,0,222,12,1,0,0,0,223,224,5,105,0,0,224,225,5,110,0,
		0,225,226,5,116,0,0,226,227,5,56,0,0,227,14,1,0,0,0,228,229,5,105,0,0,
		229,230,5,110,0,0,230,231,5,116,0,0,231,232,5,49,0,0,232,233,5,54,0,0,
		233,16,1,0,0,0,234,235,5,105,0,0,235,236,5,110,0,0,236,237,5,116,0,0,237,
		238,5,51,0,0,238,239,5,50,0,0,239,18,1,0,0,0,240,241,5,105,0,0,241,242,
		5,110,0,0,242,243,5,116,0,0,243,244,5,54,0,0,244,245,5,52,0,0,245,20,1,
		0,0,0,246,247,5,117,0,0,247,248,5,105,0,0,248,249,5,110,0,0,249,250,5,
		116,0,0,250,22,1,0,0,0,251,252,5,117,0,0,252,253,5,105,0,0,253,254,5,110,
		0,0,254,255,5,116,0,0,255,256,5,56,0,0,256,24,1,0,0,0,257,258,5,117,0,
		0,258,259,5,105,0,0,259,260,5,110,0,0,260,261,5,116,0,0,261,262,5,49,0,
		0,262,263,5,54,0,0,263,26,1,0,0,0,264,265,5,117,0,0,265,266,5,105,0,0,
		266,267,5,110,0,0,267,268,5,116,0,0,268,269,5,51,0,0,269,270,5,50,0,0,
		270,28,1,0,0,0,271,272,5,117,0,0,272,273,5,105,0,0,273,274,5,110,0,0,274,
		275,5,116,0,0,275,276,5,54,0,0,276,277,5,52,0,0,277,30,1,0,0,0,278,279,
		5,115,0,0,279,280,5,116,0,0,280,281,5,114,0,0,281,282,5,105,0,0,282,283,
		5,110,0,0,283,284,5,103,0,0,284,32,1,0,0,0,285,286,5,98,0,0,286,287,5,
		114,0,0,287,288,5,101,0,0,288,289,5,97,0,0,289,290,5,107,0,0,290,34,1,
		0,0,0,291,292,5,99,0,0,292,293,5,97,0,0,293,294,5,115,0,0,294,295,5,101,
		0,0,295,36,1,0,0,0,296,297,5,100,0,0,297,298,5,101,0,0,298,299,5,102,0,
		0,299,300,5,97,0,0,300,301,5,117,0,0,301,302,5,108,0,0,302,303,5,116,0,
		0,303,38,1,0,0,0,304,305,5,105,0,0,305,306,5,102,0,0,306,40,1,0,0,0,307,
		308,5,101,0,0,308,309,5,108,0,0,309,310,5,115,0,0,310,311,5,101,0,0,311,
		42,1,0,0,0,312,313,5,115,0,0,313,314,5,119,0,0,314,315,5,105,0,0,315,316,
		5,116,0,0,316,317,5,99,0,0,317,318,5,104,0,0,318,44,1,0,0,0,319,324,3,
		47,23,0,320,324,3,49,24,0,321,324,3,51,25,0,322,324,3,53,26,0,323,319,
		1,0,0,0,323,320,1,0,0,0,323,321,1,0,0,0,323,322,1,0,0,0,324,46,1,0,0,0,
		325,334,5,48,0,0,326,330,3,171,85,0,327,329,3,169,84,0,328,327,1,0,0,0,
		329,332,1,0,0,0,330,328,1,0,0,0,330,331,1,0,0,0,331,334,1,0,0,0,332,330,
		1,0,0,0,333,325,1,0,0,0,333,326,1,0,0,0,334,48,1,0,0,0,335,336,5,48,0,
		0,336,338,7,0,0,0,337,339,3,173,86,0,338,337,1,0,0,0,339,340,1,0,0,0,340,
		338,1,0,0,0,340,341,1,0,0,0,341,50,1,0,0,0,342,344,5,48,0,0,343,345,3,
		169,84,0,344,343,1,0,0,0,345,346,1,0,0,0,346,344,1,0,0,0,346,347,1,0,0,
		0,347,52,1,0,0,0,348,349,5,48,0,0,349,351,7,1,0,0,350,352,3,175,87,0,351,
		350,1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,354,54,1,0,
		0,0,355,356,3,57,28,0,356,56,1,0,0,0,357,359,3,47,23,0,358,357,1,0,0,0,
		358,359,1,0,0,0,359,360,1,0,0,0,360,361,5,46,0,0,361,362,3,167,83,0,362,
		364,1,0,0,0,363,365,3,179,89,0,364,363,1,0,0,0,364,365,1,0,0,0,365,371,
		1,0,0,0,366,368,3,47,23,0,367,369,3,179,89,0,368,367,1,0,0,0,368,369,1,
		0,0,0,369,371,1,0,0,0,370,358,1,0,0,0,370,366,1,0,0,0,371,58,1,0,0,0,372,
		373,5,116,0,0,373,374,5,114,0,0,374,375,5,117,0,0,375,382,5,101,0,0,376,
		377,5,102,0,0,377,378,5,97,0,0,378,379,5,108,0,0,379,380,5,115,0,0,380,
		382,5,101,0,0,381,372,1,0,0,0,381,376,1,0,0,0,382,60,1,0,0,0,383,384,5,
		39,0,0,384,385,3,63,31,0,385,386,5,39,0,0,386,392,1,0,0,0,387,388,5,39,
		0,0,388,389,3,65,32,0,389,390,5,39,0,0,390,392,1,0,0,0,391,383,1,0,0,0,
		391,387,1,0,0,0,392,62,1,0,0,0,393,394,8,2,0,0,394,64,1,0,0,0,395,396,
		5,92,0,0,396,418,5,39,0,0,397,398,5,92,0,0,398,418,5,34,0,0,399,400,5,
		92,0,0,400,418,5,92,0,0,401,402,5,92,0,0,402,418,5,48,0,0,403,404,5,92,
		0,0,404,418,5,97,0,0,405,406,5,92,0,0,406,418,5,98,0,0,407,408,5,92,0,
		0,408,418,5,102,0,0,409,410,5,92,0,0,410,418,5,110,0,0,411,412,5,92,0,
		0,412,418,5,114,0,0,413,414,5,92,0,0,414,418,5,116,0,0,415,416,5,92,0,
		0,416,418,5,118,0,0,417,395,1,0,0,0,417,397,1,0,0,0,417,399,1,0,0,0,417,
		401,1,0,0,0,417,403,1,0,0,0,417,405,1,0,0,0,417,407,1,0,0,0,417,409,1,
		0,0,0,417,411,1,0,0,0,417,413,1,0,0,0,417,415,1,0,0,0,418,66,1,0,0,0,419,
		421,5,34,0,0,420,422,3,69,34,0,421,420,1,0,0,0,421,422,1,0,0,0,422,423,
		1,0,0,0,423,424,5,34,0,0,424,68,1,0,0,0,425,427,3,71,35,0,426,425,1,0,
		0,0,427,428,1,0,0,0,428,426,1,0,0,0,428,429,1,0,0,0,429,70,1,0,0,0,430,
		433,8,3,0,0,431,433,3,65,32,0,432,430,1,0,0,0,432,431,1,0,0,0,433,72,1,
		0,0,0,434,435,5,110,0,0,435,436,5,117,0,0,436,437,5,108,0,0,437,438,5,
		108,0,0,438,74,1,0,0,0,439,440,5,40,0,0,440,76,1,0,0,0,441,442,5,41,0,
		0,442,78,1,0,0,0,443,444,5,123,0,0,444,80,1,0,0,0,445,446,5,125,0,0,446,
		82,1,0,0,0,447,448,5,91,0,0,448,84,1,0,0,0,449,450,5,93,0,0,450,86,1,0,
		0,0,451,452,5,59,0,0,452,88,1,0,0,0,453,454,5,44,0,0,454,90,1,0,0,0,455,
		456,5,46,0,0,456,92,1,0,0,0,457,458,5,58,0,0,458,94,1,0,0,0,459,460,5,
		58,0,0,460,461,5,58,0,0,461,96,1,0,0,0,462,463,5,61,0,0,463,98,1,0,0,0,
		464,465,5,43,0,0,465,466,5,61,0,0,466,100,1,0,0,0,467,468,5,45,0,0,468,
		469,5,61,0,0,469,102,1,0,0,0,470,471,5,42,0,0,471,472,5,61,0,0,472,104,
		1,0,0,0,473,474,5,47,0,0,474,475,5,61,0,0,475,106,1,0,0,0,476,477,5,38,
		0,0,477,478,5,61,0,0,478,108,1,0,0,0,479,480,5,124,0,0,480,481,5,61,0,
		0,481,110,1,0,0,0,482,483,5,94,0,0,483,484,5,61,0,0,484,112,1,0,0,0,485,
		486,5,37,0,0,486,487,5,61,0,0,487,114,1,0,0,0,488,489,5,60,0,0,489,490,
		5,60,0,0,490,491,5,61,0,0,491,116,1,0,0,0,492,493,5,62,0,0,493,494,5,62,
		0,0,494,495,5,61,0,0,495,118,1,0,0,0,496,497,5,62,0,0,497,120,1,0,0,0,
		498,499,5,60,0,0,499,122,1,0,0,0,500,501,5,61,0,0,501,502,5,61,0,0,502,
		124,1,0,0,0,503,504,5,60,0,0,504,505,5,61,0,0,505,126,1,0,0,0,506,507,
		5,62,0,0,507,508,5,61,0,0,508,128,1,0,0,0,509,510,5,33,0,0,510,511,5,61,
		0,0,511,130,1,0,0,0,512,513,5,33,0,0,513,132,1,0,0,0,514,515,5,126,0,0,
		515,134,1,0,0,0,516,517,5,38,0,0,517,136,1,0,0,0,518,519,5,124,0,0,519,
		138,1,0,0,0,520,521,5,94,0,0,521,140,1,0,0,0,522,523,5,38,0,0,523,524,
		5,38,0,0,524,142,1,0,0,0,525,526,5,124,0,0,526,527,5,124,0,0,527,144,1,
		0,0,0,528,529,5,43,0,0,529,530,5,43,0,0,530,146,1,0,0,0,531,532,5,45,0,
		0,532,533,5,45,0,0,533,148,1,0,0,0,534,535,5,43,0,0,535,150,1,0,0,0,536,
		537,5,45,0,0,537,152,1,0,0,0,538,539,5,42,0,0,539,154,1,0,0,0,540,541,
		5,47,0,0,541,156,1,0,0,0,542,543,5,37,0,0,543,158,1,0,0,0,544,545,5,46,
		0,0,545,546,5,46,0,0,546,160,1,0,0,0,547,548,5,63,0,0,548,162,1,0,0,0,
		549,553,3,177,88,0,550,552,3,165,82,0,551,550,1,0,0,0,552,555,1,0,0,0,
		553,551,1,0,0,0,553,554,1,0,0,0,554,164,1,0,0,0,555,553,1,0,0,0,556,559,
		3,177,88,0,557,559,3,169,84,0,558,556,1,0,0,0,558,557,1,0,0,0,559,166,
		1,0,0,0,560,562,3,169,84,0,561,560,1,0,0,0,562,563,1,0,0,0,563,561,1,0,
		0,0,563,564,1,0,0,0,564,168,1,0,0,0,565,568,5,48,0,0,566,568,3,171,85,
		0,567,565,1,0,0,0,567,566,1,0,0,0,568,170,1,0,0,0,569,570,7,4,0,0,570,
		172,1,0,0,0,571,572,7,5,0,0,572,174,1,0,0,0,573,574,7,6,0,0,574,176,1,
		0,0,0,575,576,7,7,0,0,576,178,1,0,0,0,577,578,7,8,0,0,578,180,1,0,0,0,
		579,581,7,9,0,0,580,579,1,0,0,0,581,582,1,0,0,0,582,580,1,0,0,0,582,583,
		1,0,0,0,583,584,1,0,0,0,584,585,6,90,0,0,585,182,1,0,0,0,586,587,5,47,
		0,0,587,588,5,42,0,0,588,592,1,0,0,0,589,591,9,0,0,0,590,589,1,0,0,0,591,
		594,1,0,0,0,592,593,1,0,0,0,592,590,1,0,0,0,593,595,1,0,0,0,594,592,1,
		0,0,0,595,596,5,42,0,0,596,597,5,47,0,0,597,598,1,0,0,0,598,599,6,91,1,
		0,599,184,1,0,0,0,600,601,5,47,0,0,601,602,5,47,0,0,602,606,1,0,0,0,603,
		605,8,10,0,0,604,603,1,0,0,0,605,608,1,0,0,0,606,604,1,0,0,0,606,607,1,
		0,0,0,607,609,1,0,0,0,608,606,1,0,0,0,609,610,6,92,1,0,610,186,1,0,0,0,
		24,0,323,330,333,340,346,353,358,364,368,370,381,391,417,421,428,432,553,
		558,563,567,582,592,606,2,6,0,0,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
